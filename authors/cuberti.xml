<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog Bitson. Aprendimos de unos. Enseñamos a otros. Apostamos a la cultura colectiva. (Publicaciones de cuberti)</title><link>http://blog.bitson.group/</link><description></description><atom:link href="http://blog.bitson.group/authors/cuberti.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><copyright>Contents © 2018 &lt;a href="mailto:info@bitson.group"&gt;Cooperativa de Trabajo BITSON Ltda.&lt;/a&gt; </copyright><lastBuildDate>Fri, 13 Jul 2018 14:13:29 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Orígenes del Scrum</title><link>http://blog.bitson.group/posts/origenes-del-scrum/</link><dc:creator>cuberti</dc:creator><description>&lt;div&gt;&lt;h2&gt;Orígenes del Scrum&lt;/h2&gt;
&lt;p&gt;Primero lo primero ¿De dónde viene el término Scrum? Ikujiro Nonaka e Hirotaka Takeuchi publicaron en 1986 en la Harvard Business Review el artículo: “El nuevo nuevo juego para el desarrollo de productos”. Allí definieron el término Scrum basado en el avance de las formaciones en partidos de rugby. Pero la modalidad de trabajo ya existía en empresas tecnológicas como Hondo, Canon y Fuji-Xerox. Con los años fue evolucionando y se ha extendido a muchos sectores no sólo el tecnológico.&lt;/p&gt;
&lt;p&gt;Takeuchi And Nonoka explicaron lo siguiente: “el enfoque de “carrera de relevos” para el desarrollo de productos entra en conflicto con el objetivo de obtener la máxima velocidad y flexibilidad. En su lugar un enfoque como el rugby – donde el equipo intenta avanzar como equipo, enviando el balón hacia atrás y luego avanzar – sirve mejor a los desarrollos competitivos que se ven hoy en día”. Por eso Scrum y equipo auto organizado van siempre de la mano ¡Cooperativa y autogestión son sinónimos así que en nuestro caso para a utilizar esta metodología es muy enriquecedor.&lt;/p&gt;
&lt;p&gt;Esta metodología implica realizar entregas parciales y regulares del producto final, priorizadas por el beneficio que aportan al receptor del proyecto. s, donde se necesita obtener resultados pronto, donde los requisito. En la actualidad, los proyectos se desarrollan en contextos muy versátiles. Son más complejos que antes, frente a unas exigencias del cliente y del mercado mucho más variables, y con una incertidumbre elevada. Por eso, la aplicación del método Scrum se ha extendido como la pólvora en numerosos sectores, fuera del mundo del desarrollo de software. Por este motivo nosotros utilizamos y se recomienda para proyectos en entornos complejo.&lt;/p&gt;
&lt;p&gt;Asimismo le permite en cualquier momento realinear el software con los objetivos de negocio de su empresa, ya que puede introducir cambios funcionales o de prioridad en el inicio de cada nueva iteración sin ningún problema.&lt;/p&gt;
&lt;p&gt;¡Una gran metodología para implementar camino a la eficiencia!&lt;/p&gt;&lt;/div&gt;</description><guid>http://blog.bitson.group/posts/origenes-del-scrum/</guid><pubDate>Fri, 13 Jul 2018 14:12:18 GMT</pubDate></item><item><title>¿Por qué emplear la técnica de Entrega Continua?</title><link>http://blog.bitson.group/posts/por-que-emplear-la-tecnica-de-entrega-continua/</link><dc:creator>cuberti</dc:creator><description>&lt;div&gt;&lt;h2&gt;¿Por qué emplear la técnica de Entrega Continua?&lt;/h2&gt;
&lt;p&gt;La técnica de Entrega Continua (CD)  trae como consecuencia mayor velocidad y menor complejidad en el proceso de desarrollo de software. A su vez, permite lanzamientos mucho más seguidos, proporcionando retroalimentación inmediata.&lt;/p&gt;
&lt;p&gt;Implementar este proceso suele ser difícil para las organizaciones esto se debe principalmente a que no es un cambio en el proyecto tecnológico sino un cambio organizacional.&lt;/p&gt;
&lt;p&gt;La entrega continua automatiza todo el proceso de publicación de software. Cada revisión efectuada activa un proceso automatizado que crea, prueba y almacena la actualización. Las pruebas pueden incluir pruebas de la UI, de carga, de integración, de fiabilidad de la API, etc. De este modo, los desarrolladores pueden validar las actualizaciones de forma más exhaustiva y descubrir problemas por anticipado. Con la nube, resulta sencillo y rentable automatizar la creación y replicación de varios entornos de pruebas, algo que anteriormente era complicado en las instalaciones. La decisión definitiva de implementarla en un entorno de producción en vivo la toma el desarrollador.&lt;/p&gt;
&lt;p&gt;Cuando se la entrega continua se implementa de manera adecuada, los desarrolladores dispondrán siempre de un artefacto listo para su implementación que se ha sometido a un proceso de pruebas estandarizado. Esto significa mayor autonomía para el desarrollado. &lt;/p&gt;
&lt;p&gt;Con la entrega continua, todos los cambios en el código se crean, se prueban y se envían a un entorno de almacenamiento o pruebas de no producción. Pueden efectuarse varias pruebas al mismo tiempo antes de la implementación en producción. La diferencia entre la entrega continua y la implementación continua es la diferencia de aprobación manual para actualizar la producción. Con la implementación continua, la producción tiene lugar de manera automática, sin aprobación explícita. &lt;/p&gt;&lt;/div&gt;</description><guid>http://blog.bitson.group/posts/por-que-emplear-la-tecnica-de-entrega-continua/</guid><pubDate>Thu, 05 Jul 2018 14:09:48 GMT</pubDate></item><item><title>Cooperativismo, Software Libre y Feminismo</title><link>http://blog.bitson.group/posts/cooperativismo-software-libre-y-feminismo/</link><dc:creator>cuberti</dc:creator><description>&lt;div&gt;&lt;h2&gt;Cooperativismo, software libre y feminismo.&lt;/h2&gt;
&lt;p&gt;Uno crece en un entorno delimitado y pareciera que siempre tiene que mantenerse dentro de esos parámetros. ¿Acaso no se ve como un logro que un niñx pueda pintar dentro de los bordes? ¿Es realmente un triunfo propio? ¿De la sociedad? ¿Es un simple proceso de aprendizaje?&lt;/p&gt;
&lt;p&gt;Asociarnos a una Cooperativa implicó un proceso de resignificación de nuestra vida laboral. Incluso, y con el perdón de los amigos y familias, esos límites entre “el horario de oficina” y “casa” se fueron borrando. Creemos en un sistema solidario, donde las verticalidades son solo un fantasma, donde la asamblea arrasa con la meritocracia, donde la lucha es continua. Creemos en nosotros y no como una mínima parte de un sistema sino como seres libres y pensantes.&lt;/p&gt;
&lt;p&gt;Convicción desde nuestro punto de vista es implicancia.&lt;/p&gt;
&lt;p&gt;Desde esa estructura decidimos realizar nuestras tareas en sistemas operativos libres. Una vez más nos encontramos cuestionando lo establecido. No podemos ceder nuestra libertad a sistemas restrictivos, capitalistas y excluyentes. Creemos con convicción que las tecnologías libres nos pueden abrir terreno para la emancipación individual y colectiva ¡Lo colectivo por sobre las individualidades!&lt;/p&gt;
&lt;p&gt;Convicción desde nuestro punto de vista es implicancia.&lt;/p&gt;
&lt;p&gt;Entonces, desde nuestros cimientos: cooperativismo y software libre no nos queda otra que gritar por el feminismo. Nuestras banderas son la igualdad y la libertad pero no sólo como expresiones de deseo sino desde nuestra cotidianidad. &lt;/p&gt;
&lt;p&gt;Margarita Salas explica en “Género y software libre en América Latina. Un estudio de caso” que el movimiento de los sistemas operativos libres está vinculada a “la creación colectiva, la apropiación comunitaria del conocimiento y la promoción de una filosofía de inclusión, diversidad y solidaridad”.&lt;/p&gt;
&lt;p&gt;Convicción desde nuestro punto de vista es implicancia.&lt;/p&gt;
&lt;p&gt;Al día de hoy, se calcula que en el sector de producción de software apenas el 20% son mujeres. Y esta desigualdad es aún más fuerte cuando hablamos de software libre donde la participación femenina es del 2% ¡Queremos que este porcentaje cambie! &lt;/p&gt;
&lt;p&gt;Hoy y siempre vamos a luchar por nuestros ideales. ¡Libertad, igualdad, inclusión, solidaridad y diversidad!&lt;/p&gt;
&lt;p&gt;¡Creemos en esta forma y queremos ver un mundo así!&lt;/p&gt;&lt;/div&gt;</description><category>cooperativismo</category><category>feminismo</category><category>software libre</category><guid>http://blog.bitson.group/posts/cooperativismo-software-libre-y-feminismo/</guid><pubDate>Thu, 08 Mar 2018 18:48:31 GMT</pubDate></item></channel></rss>