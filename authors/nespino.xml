<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog Bitson. Aprendimos de unos. Enseñamos a otros. Apostamos a la cultura colectiva. (Publicaciones de nespino)</title><link>http://blog.bitson.group/</link><description></description><atom:link href="http://blog.bitson.group/authors/nespino.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><copyright>Contents © 2018 &lt;a href="mailto:info@bitson.group"&gt;Cooperativa de Trabajo BITSON Ltda.&lt;/a&gt; </copyright><lastBuildDate>Mon, 25 Jun 2018 04:14:04 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Preprocesando datos para Machine Learning</title><link>http://blog.bitson.group/posts/preprocesando-datos-para-machine-learning/</link><dc:creator>nespino</dc:creator><description>&lt;div&gt;&lt;p&gt;A todos nos gustaría llegar a casa y que la cena esté lista. A los algoritmos de &lt;a href="https://es.wikipedia.org/wiki/Aprendizaje_autom%C3%A1tico" title="¿Qué es Machine Learning?"&gt;Machine Learning&lt;/a&gt; también, por eso es que hoy vamos a dejarles cuatro recetas para que puedan alimentar en forma eficiente a sus procesos de entrenamiento.&lt;/p&gt;
&lt;p&gt;Las recetas que repasaremos el día de hoy son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Binarización&lt;/li&gt;
&lt;li&gt;Eliminación del valor medio&lt;/li&gt;
&lt;li&gt;Escalando&lt;/li&gt;
&lt;li&gt;Normalización&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Cada caso puede requerir el uso de uno o más de estos métodos en forma combinada.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Para simplificarnos las tareas matemáticas, vamos a hacer uso de dos paquetes &lt;a href="https://es.wikipedia.org/wiki/Software_libre_y_de_c%C3%B3digo_abierto" title="Diferencias entre Software Libre y Código Abierto"&gt;Open Source&lt;/a&gt; para desarrollos científicos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.numpy.org/" title="Numpy"&gt;Numpy&lt;/a&gt;, el cual se puede instalar junto a las de herramientas de &lt;a href="https://www.scipy.org/install.html" title="¿Cómo instalar SciPy?"&gt;SciPy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;El paquete de aprendizaje de Machine Learning &lt;a href="http://scikit-learn.org/stable/install.html" title="Scikit Learn"&gt;scikit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ambos se pueden instalar fácilmente desde &lt;strong&gt;pip&lt;/strong&gt; con los siguientes comandos:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pip install scipy&lt;/p&gt;
&lt;p&gt;pip install scikit-learn&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Primero vamos a importar las librerías necesarias y definir una matriz de ejemplo en numpy para usar en cada uno de los métodos que explicaremos a continuación&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;import numpy as np&lt;/p&gt;
&lt;p&gt;from sklearn import preprocessing&lt;/p&gt;
&lt;p&gt;matriz_ejemplo = np.array([[2.3, 2.9, -1.3, 5.2],&lt;/p&gt;
&lt;p&gt;                        
                   [1.3, -3.8, 2.1, 4.3],&lt;/p&gt;
&lt;p&gt;                        
                   [-8.9, 2.4, -1.1, 0],&lt;/p&gt;
&lt;p&gt;                        
                   [4.1, -3.9, 2.5, 2.1]])&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Binarización&lt;/h2&gt;
&lt;p&gt;Este método es comparable al que utilizan las entradas de las &lt;a href="https://es.wikipedia.org/wiki/Puerta_l%C3%B3gica" title="Compuertas Lógicas"&gt;Compuertas Lógicas&lt;/a&gt; con las que están hechas todos nuestros dispositivos electrónicos, en el que, habiendo definido un valor de umbral, podemos separar a los datos que ingresan de manera que los menores a ese umbral correspondan a 0 (False) y los mayores correspondan a 1 (True). Vamos a transformar esos valores numéricos en valores booleanos, usando un umbral de 2.4 con la función Binarizer:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;matriz_binarizada = preprocessing.Binarizer(threshold=2.4).transform(matriz_ejemplo)&lt;/p&gt;
&lt;p&gt;print("Matriz binarizada:\n", matriz_binarizada)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;y el resultado será:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Matriz binarizada:&lt;/p&gt;
&lt;p&gt;  [[0. 1. 0. 1.]&lt;/p&gt;
&lt;p&gt;  [0. 0. 0. 1.]&lt;/p&gt;
&lt;p&gt;  [0. 0. 0. 0.]&lt;/p&gt;
&lt;p&gt;  [1. 0. 1. 0.]]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Observen que el segundo elemento de la tercer fila de la matriz de ejemplo es 2.4, y al binarizarlo con el umbral 2.4 se obtiene un 0 en la misma posición.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pueden encontrar el código completo de este método en el archivo de ejemplo &lt;a href="http://blog.bitson.group/code/ai/binarizacion.py" download&gt;binarizacion.py&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Eliminación del valor medio&lt;/h2&gt;
&lt;p&gt;Este método es muy usado en preprocesamiento de datos para Machine Learning, con el cual se elimina el sesgo de las características en nuestro vector característico. La función que nos permite esta transformación se llama &lt;strong&gt;scale&lt;/strong&gt; y es muy sencilla de usar. Para verificar los resultados paso a paso incluímos algunos &lt;strong&gt;prints&lt;/strong&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;print("Matriz de ejemplo:")&lt;/p&gt;
&lt;p&gt;print(matriz_ejemplo)&lt;/p&gt;
&lt;p&gt;print("Promedio =", matriz_ejemplo.mean(axis=0))&lt;/p&gt;
&lt;p&gt;print("Desviación típica =", matriz_ejemplo.std(axis=0))&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;promedio_eliminado = preprocessing.scale(matriz_ejemplo)&lt;/p&gt;
&lt;p&gt;print("\nMatriz procesada:")&lt;/p&gt;
&lt;p&gt;print(promedio_eliminado)&lt;/p&gt;
&lt;p&gt;print("Promedio =", promedio_eliminado.mean(axis=0))&lt;/p&gt;
&lt;p&gt;print("Desviación Típica =", promedio_eliminado.std(axis=0))&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Lo que debería darnos como resultado:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Matriz de ejemplo:&lt;/p&gt;
&lt;p&gt; [[ 2.1  2.9 -1.3  5.2]&lt;/p&gt;
&lt;p&gt; [ 1.3 -3.8  2.1  4.3]&lt;/p&gt;
&lt;p&gt; [-8.9  2.4 -1.1  0. ]&lt;/p&gt;
&lt;p&gt; [ 4.1 -3.9  2.5  2.1]]&lt;/p&gt;
&lt;p&gt;Promedio = [-0.35 -0.6   0.55  2.9 ]&lt;/p&gt;
&lt;p&gt;Desviación típica = [5.04058528 3.25499616 1.75712834 2.01866292]&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Matriz procesada:&lt;/p&gt;
&lt;p&gt; [[ 0.48605467  1.07527009 -1.05285423  1.13936803]&lt;/p&gt;
&lt;p&gt; [ 0.32734294 -0.98310408  0.88212111  0.69352837]&lt;/p&gt;
&lt;p&gt; [-1.69623159  0.92166007 -0.93903215 -1.43659447]&lt;/p&gt;
&lt;p&gt; [ 0.88283399 -1.01382608  1.10976527 -0.39630192]]&lt;/p&gt;
&lt;p&gt;Promedio = [ 0.00000000e+00  0.00000000e+00 -1.11022302e-16  4.16333634e-17]&lt;/p&gt;
&lt;p&gt;Desviación Típica = [1. 1. 1. 1.]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Como pueden observar el promedio en la matriz procesada está cerca de 0 y la desviación típica es 1.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pueden encontrar el código completo de este método en el archivo de ejemplo &lt;a href="http://blog.bitson.group/code/ai/eliminar_valor_medio.py" download&gt;eliminar_valor_medio.py&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Escalando&lt;/h2&gt;
&lt;p&gt;Es posible que nuestro vector característico incluya valores extremadamente altos y/o extremadamente bajos, por eso es importante escalar esos valores para que nuestro algoritmo opere con valores cercanos, y así evitamos características con valores desorbitantes.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;datos_escalados = preprocessing.MinMaxScaler(feature_range=(0, 1))&lt;/p&gt;
&lt;p&gt;datos_escalados = datos_escalados.fit_transform(matriz_ejemplo)&lt;/p&gt;
&lt;p&gt;print("Datos escalados:\n", datos_escalados)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Podemos comprobar que cada fila fue escalada para que sus valores mínimos y máximos sean 0 y 1 respectivamente, y los demás se transformaron en forma proporcional:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Datos escalados:&lt;/p&gt;
&lt;p&gt; [[0.84615385 1.                 0.
                1.                  ]&lt;/p&gt;
&lt;p&gt;  [0.78461538  0.01470588 0.89473684 0.82692308 ]&lt;/p&gt;
&lt;p&gt;  [0.                  0.92647059 0.05263158 0.
                ]&lt;/p&gt;
&lt;p&gt;  [1.                  0.
                1.
                0.40384615 ]]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Pueden encontrar el código completo de este método en el archivo de ejemplo &lt;a href="http://blog.bitson.group/code/ai/escalando.py" download&gt;escalando.py&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Normalización&lt;/h2&gt;
&lt;p&gt;La normalización se usa para modificar los valores en el vector característico y así poder medirlos en una escala común. Existen varios métodos para esto, así que vamos a presentarles los dos más comunes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Normalización L1&lt;/strong&gt;: Busca las menores desviaciones absolutas, y funciona asegurándose que la suma de los valores absolutos en cada fila sea 1.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Normalización L2&lt;/strong&gt;: Busca los menores cuadrados, y funciona asegurándose que la suma de los cuadrados sea 1.&lt;/p&gt;
&lt;p&gt;En general el método de Normalización L1 se considera más robusto que el de Normalización L2, porque el primero es más resistente a valores atípicos en los datos de origen. Es frecuente encontrar valores atípicos y no hay nada que podamos hacer al respecto, por eso buscamos técnicas que los ignoren de forma segura y efectiva durante los cálculos. En cambio, si los valores atípicos son importantes para el problema que estamos resolviendo, podríamos inclinarnos a usar la Normalización L2.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;datos_normalizados_l1 = preprocessing.normalize(matriz_ejemplo, norm='l1')&lt;/p&gt;
&lt;p&gt;datos_normalizados_l2 = preprocessing.normalize(matriz_ejemplo, norm='l2')&lt;/p&gt;
&lt;p&gt;print("Datos con Normalización L1:\n", datos_normalizados_l1)&lt;/p&gt;
&lt;p&gt;print("\nDatos con Normalización L2:\n", datos_normalizados_l2)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Usamos la función &lt;strong&gt;normalize&lt;/strong&gt;, indicando el tipo de normalización, y así podremos apreciar la diferencia por pantalla:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Datos con Normalización L1:&lt;/p&gt;
&lt;p&gt;[[ 0.1826087   0.25217391 -0.11304348  0.45217391]&lt;/p&gt;
&lt;p&gt;[ 0.11304348 -0.33043478  0.1826087   0.37391304]&lt;/p&gt;
&lt;p&gt;[-0.71774194  0.19354839 -0.08870968  0.        ]&lt;/p&gt;
&lt;p&gt;[ 0.32539683 -0.30952381  0.1984127   0.16666667]]&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Datos con Normalización L2:&lt;/p&gt;
&lt;p&gt;[[ 0.32578702  0.44989636 -0.20167768  0.80671072]&lt;/p&gt;
&lt;p&gt;[ 0.20808658 -0.60825309  0.33613986  0.68828639]&lt;/p&gt;
&lt;p&gt;[-0.95870891  0.25852824 -0.11849211  0.        ]&lt;/p&gt;
&lt;p&gt;[ 0.62758369 -0.59696986  0.38267298  0.32144531]]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Pueden encontrar el código completo de este método en el archivo de ejemplo &lt;a href="http://blog.bitson.group/code/ai/normalizacion.py" download&gt;normalizacion.py&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Espero que con estos métodos le den un merecido banquete a sus algoritmos, y que tengan ustedes una deliciosa y nutritiva cena.&lt;/p&gt;&lt;/div&gt;</description><category>ai</category><category>artificial inteligence</category><category>ia</category><category>inteligencia artificial</category><category>machine learning</category><category>numpy</category><category>preprocessing</category><category>python</category><category>scikit</category><category>scipy</category><guid>http://blog.bitson.group/posts/preprocesando-datos-para-machine-learning/</guid><pubDate>Mon, 11 Jun 2018 05:30:15 GMT</pubDate></item><item><title>Empezando a usar Google AdWords Express</title><link>http://blog.bitson.group/posts/empezando-a-usar-google-adwords-express/</link><dc:creator>nespino</dc:creator><description>&lt;div&gt;&lt;p&gt;El día de hoy vamos a ver cómo empezar a usar &lt;a href="https://adwords.google.com/express" title="Google AdWords Express"&gt;Google AdWords Express&lt;/a&gt;, aprovechando los descuentos que ofrecen y andan dando vueltas. En caso de no haber recibido uno, podés ponerte en contacto y hacer ruido de que tenés una empresa o un dominio o aparición en internet y te lo envían.&lt;/p&gt;
&lt;p&gt;Para empezar, les dejo el número de teléfono gratuito para asistencia a cuentas con inversiones de bajo monto (al día del a fecha, inversiones menores a $2500 ARS mensuales): &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0800-222-4664&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Si la inversión supera ese monto, el número entonces será:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0800-666-1866 ó 0800-666-0668&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;A continuación, el tutorial empleará el signo $ para referirse a ARS (Pesos Argentinos)&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;Empezando a usar Google AdWords Express&lt;/h3&gt;
&lt;p&gt;Nos llegó por correo tradicional a las oficinas de Bitson, un código que otorgaba $700 de crédito en Adwords, con el único requisito de hacer un pago previo de $300. Pero como estábamos de suerte, también le llegó otro a @lecovi, donde el monto para el mismo requisito era de $175. Se pueden imaginar cuál de los dos usamos, de todas formas el camino a recorrer es exactamente igual.&lt;/p&gt;
&lt;p&gt;El código:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;AHT9T-KURGR-A9MP&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Las condiciones detalladas:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Activar o reactivar una cuenta en Google AdWords&lt;/li&gt;
&lt;li&gt;Antes de los 14 días de dicha activación, ingresar el código en el &lt;a href="https://adwords.google.com/aw/promotions" title="Ingresar cupones de descuento"&gt;apartado correspondiente&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Usar $175 en publicidad&lt;/li&gt;
&lt;li&gt;Abonar esos $175 a través de Banelco, PagoMisCuentas, tarjeta de débito o crédito (&lt;a href="https://billing.google.com/payments/u/0/paymentsinfofinder" title="Información de &amp;gt;pago"&gt;https://billing.google.com/payments/u/0/paymentsinfofinder&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Esperar 5 días hábiles hasta que se acredite el beneficio, del cual cabe destacar, que el sistema no dará aviso.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;AdWords tampoco emitirá ninguna clase de aviso cuando se acabe el crédito promocional, es necesario revisar periódicamente la cuenta para no generar deudas indeseables.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;También es posible que ingresemos a un nuevo programa llamado AdWords Express. Tiene las mismas funciones y costos que AdWords tradicional, pero la interfaz gráfica es muchísimo más sencilla. ¡Altamente recomendado para principiantes!&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Configuración de la primer campaña en Google AdWords Express&lt;/h3&gt;
&lt;p&gt;Estos son los datos que nos fueron requeridos. Es bastante intuitivo, y algunos no requieren explicación adicional...&lt;/p&gt;
&lt;p&gt;Sitio a difundir: &lt;br&gt;
(La &lt;a href="https://es.wikipedia.org/wiki/Localizador_de_recursos_uniforme" title="Significado de URL..."&gt;URL&lt;/a&gt; del sitio que queremos promocionar) &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://bitson.group/cursos/" title="Cursos de bitson"&gt;https://bitson.group/cursos/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Objetivo: &lt;br&gt;
(Qué es lo que esperamos que pase en nuestro sitio)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Acción en el sitio web (registro en el formulario)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Radio de acción:&lt;br&gt;
(¿Dónde queremos que se muestre nuestro anuncio?)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Mostrar el anuncio en un radio de 15km desde la empresa&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Para esto, se puede definir una dirección específica o vincular directamente con &lt;a href="https://www.google.es/intl/es/business/" title="Google My Business"&gt;Google My Business&lt;/a&gt;, que tomará la dirección automáticamente.
En base a esta configuración, AdWords nos presenta la siguiente estimación:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;El tamaño de la audiencia potencial, será entonces de 18.424.498 personas por mes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Esto significa que se prevé que 18 millones de personas verán el anuncio. ¿Y tenemos que pagar por todo esto? Por supuesto que no, sólo pagaremos por cada click. A este costo se lo define como &lt;a href="https://support.google.com/adwords/answer/116495" title="Costo por click"&gt;CPC&lt;/a&gt; (Costo por click o Cost per click). Este valor está determinado por el ranking de nuestro anuncio y la oferta para el mismo tipo de anuncio en la misma región. En definitiva, este valor lo va a definir Google, y no podemos tomar control sobre eso, pero sí podemos limitar cuánto estamos dispuestos a pagar por ese click. En función de ese límite, se establecerá este ranking, lo que definirá en qué orden será mostrado en el navegador junto a las publicidades de la competencia. A todo este proceso complejo se lo llama subasta. Cuando muchos anunciantes compiten por la misma aparición de publicidad, AdWords seleccionará y mostrará únicamente a los anuncios de mayor ranking.&lt;/p&gt;
&lt;p&gt;En adelante, para acceder al panel de control, podemos hacerlo a través de &lt;a href="https://adwords.google.com/express/plus/" title="Panel de Control de Google AdWords Express"&gt;https://adwords.google.com/express/plus/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Definiendo el producto&lt;/h2&gt;
&lt;p&gt;Se promociona: &lt;br&gt;
(¿Qué clase de producto o servicio estamos ofreciendo?)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Curso de programación&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Mostrar anuncio a personas que busquen:&lt;br&gt;
(Listado de categorías relativas a nuestro producto o servicio)&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Curso de Programación&lt;/li&gt;
&lt;li&gt;Introducción a la programación web&lt;/li&gt;
&lt;li&gt;Informática y Programación&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Gracias a la información brindada, Google AdWords filtrará a los destinatarios de nuestro anuncio, de manera de no desperdiciar clicks (que paguemos por aquellas personas curiosas que entran sólo para ver qué es) y para no llenar las búsquedas de Google con publicidad no relevante para quien esté navegando.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;El tamaño de la audiencia potencial, será entonces de 11.516 personas por mes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Diseño del anuncio:&lt;br&gt;
(Dentro del formato ofrecido por AdWords, contamos con 3 renglones para atraer a nuestros clientes hacia nuestro sitio)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Aprendé Python en bitson - Sumate a los que saben
Anuncio bitson.group
Aprovechá el año y arrancá en Febrero! Precio promocional&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Lo que nos da como resultado:&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bitson.group/cursos" title="Cursos en bitson"&gt;&lt;img alt="adwords curso bitson python" src="http://blog.bitson.group/img/adwords.png" title="Anuncio de Curso de Python en bitson"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;¿Cuanto vamos a invertir?&lt;/h2&gt;
&lt;p&gt;Como primera prueba, decidimos invertir lo mínimo requerido para acceder a la asistencia telefónica, $2500 ARS mensuales. Por menos de ese valor la ayuda que recibís por teléfono es mínima, por el contrario, a partir de ese valor de inversión la asistencia es muy completa y por demás, agradable.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Inversión $82,24 ARS$ al día de media ($2500 al meś de máximo)&lt;/p&gt;
&lt;p&gt;Rendimiento estimado: 996 - 1669 visualizaciones, 244 - 409 clics&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
Cuándo pagas&lt;/p&gt;
&lt;p&gt;Solo pagarás cuando alguien haga clic en tu anuncio o llame a tu empresa.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
Cuánto cuesta&lt;/p&gt;
&lt;p&gt;Cada clic tiene un coste distinto, pero no gastarás más del presupuesto mensual que hayas establecido.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
Qué ocurre si cambias de idea&lt;/p&gt;
&lt;p&gt;Prueba a publicar el anuncio sin compromiso, ya que puedes cambiar el presupuesto o cancelar su publicación en cualquier momento.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Para facilitar los pagos, dejé registrada una tarjeta de crédito, de manera que los pagos se hagan en forma automática. También es posible entrar a la sección de Facturación y emitir los pagos manualmente.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Les recomendamos aumentar el seguimiento sobre sus publicaciones, conectando nuestro sitio con &lt;a href="https://www.google.com/analytics/" title="Google Analytics"&gt;Google Analytics&lt;/a&gt;, usando el tag que ofrece Adwords Express. Para una mejor medición de nuestro sitio les recomendamos utilizar el &lt;a href="https://developers.google.com/analytics/resources/concepts/gaConceptsTrackingOverview?hl=es-419" title="Píxel de seguimiento"&gt;Píxel de seguimiento&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;¿Cómo hacer para recibir el dinero promocional?&lt;/h2&gt;
&lt;p&gt;En nuestro caso, pasadas las 48hs de haber el pago mínimo requerido para la activación del cupón promocional ($175 ARS), nos apareció el crédito de $700 ARS en nuestra cuenta. &lt;/p&gt;
&lt;p&gt;¡OJO! Uno debe ser responsable a la hora de armar las campañas. Lo mejor es darles una fecha de comienzo y una de finalización, contemplando el costo diario, de manera que sepamos de antemano cuánto dinero estamos dispuestos a invertir en publicidad. Para Google AdWords, es suficiente con que hayan hecho click en nuestro anuncio para cargarlo en nuestra cuenta. ¿Es confiable? Podríamos decir que sí. El mismo AdWords te ofrece la posibilidad de analizar desde donde viene el tráfico, y armar estadísticas basado en distintos paramétros. Hay mucho para investigar al respecto, y muchas consideraciones a la hora de armar una campaña.&lt;/p&gt;
&lt;p&gt;Así fue que dimos nuestro primer curso en &lt;a href="https://bitson.group" title="bitson"&gt;bitson&lt;/a&gt;, y que lo publicitamos a través de &lt;a href="https://adwords.google.com/" title="Google AdWords"&gt;Google AdWords&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</description><category>adwordsexpress</category><category>comunicacion</category><category>google</category><category>marketing</category><category>publicidad</category><category>sem</category><guid>http://blog.bitson.group/posts/empezando-a-usar-google-adwords-express/</guid><pubDate>Thu, 01 Mar 2018 17:24:36 GMT</pubDate></item><item><title>Creando artículos en Nikola</title><link>http://blog.bitson.group/posts/creando-articulos-en-nikola/</link><dc:creator>nespino</dc:creator><description>&lt;div&gt;&lt;p&gt;Hoy les presentamos nuestro primer post recursivo. &lt;/p&gt;
&lt;h3&gt;Cómo crear un artículo para el blog de bitson&lt;/h3&gt;
&lt;p&gt;Ingredientes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/pypa/pipenv" title="Repositorio de pipenv"&gt;pipenv&lt;/a&gt; (Para más información ver la guía &lt;a href="http://blog.bitson.group/posts/empezando-con-pipenv/" title="Empezando con pipenv"&gt;Empezando con pipenv&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pages.github.com/" title="Páginas de GitHub"&gt;GitHub Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet" title="Guía rápida de Markdown"&gt;Markdown&lt;/a&gt; como lenguaje de marcado &lt;/li&gt;
&lt;li&gt;&lt;a href="https://getnikola.com/" title="Sitio oficial de Nikola"&gt;&lt;img alt="nikola logo" src="http://blog.bitson.group/img/logo_nikola.png" title="Logo de Nikola"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sin más preámbulo, dejo la receta a continuación... &lt;/p&gt;
&lt;h2&gt;Configurando el entorno pipenv&lt;/h2&gt;
&lt;p&gt;Primero, nos aseguramos de tener &lt;a href="https://bryson3gps.wordpress.com/2017/11/08/stop-everything-start-using-pipenv/" title="Cómo instalar pipenv"&gt;pipenv instalado&lt;/a&gt;. Resulta práctico disponer del comando pipenv desde cualquier ruta, por lo que sugerimos agregar la ubicación de la misma a la variable de entorno PATH en el archivo .bashrc (.zshrc, o el que corresponda al shell que usen). Para saber dónde está ubicado pipenv podemos ejecutar el siguiente comando desde la consola:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;which pipenv&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/home/nespino/.local/bin/pipenv&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Por lo que la línea de código para agregar pipenv al PATH sería: &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;export PATH=$PATH:~/.local/bin&lt;/strong&gt; &lt;/p&gt;
&lt;h2&gt;Clonando nuestro repositorio de GitHub Pages&lt;/h2&gt;
&lt;p&gt;Una vez configurado el entorno pipenv, procedemos a clonar el &lt;a href="https://github.com/bitson/bitson.github.io.git" title="Repositorio del blog de bitson"&gt;repositorio&lt;/a&gt; donde se alojan todas las entradas de nuestro blog.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;git clone https://github.com/bitson/bitson.github.io.git&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;No necesitamos permisos especiales para clonarlo, pero no podremos subir el nuevo contenido del blog sin estar debidamente autorizado.&lt;/p&gt;
&lt;h3&gt;IMPORTANTE&lt;/h3&gt;
&lt;p&gt;Debemos usar la rama &lt;strong&gt;src&lt;/strong&gt;, en donde tenemos disponible los archivos necesarios para instalar Nikola y todas los artículos del blog.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;git checkout src&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Instalando Nikola&lt;/h2&gt;
&lt;p&gt;Dentro del mismo, en la carpeta &lt;strong&gt;bitblog&lt;/strong&gt; se encuentra el archivo &lt;strong&gt;Pipfile&lt;/strong&gt;, que es el que nos permitirá instalar &lt;a href="https://getnikola.com/" title="Sitio oficial de Nikola"&gt;&lt;strong&gt;Nikola&lt;/strong&gt;&lt;/a&gt; a través del siguiente comando en consola:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pipenv --three install&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;El parámetro &lt;strong&gt;--three&lt;/strong&gt; indica que vamos a usar la versión 3 de Python. En caso de omitirlo, usaremos la versión que esté configurado por defecto en nuestro sistema. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Nota:&lt;/strong&gt; Es posible las dependencias que tengamos en el sistema choquen con las que están declaradas en el archivo Pipfile.lock. En ese caso, podemos ignorar este archivo durante la instalación usando el comando:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pipenv --three install --skip-lock&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Otra nota:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Es posible que el instalador de pipenv nos devuelva la siguiente advertencia:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Warning: Your Pipfile requires python_version 3.6, but you are using 3.5.2 (/home/n/./b/bin/python).&lt;/p&gt;
&lt;p&gt;$ pipenv check will surely fail.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;No es algo de qué preocuparse.&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;Instalación en curso...&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;Virtualenv location: /home/nespino/.virtualenvs/bitblog-Dccxvb6W&lt;/p&gt;
&lt;p&gt;Installing dependencies from Pipfile...&lt;/p&gt;
&lt;p&gt;🐍   ▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉ 1/1 — 00:01:23&lt;/p&gt;
&lt;p&gt;To activate this project's virtualenv, run the following:&lt;/p&gt;
&lt;p&gt;$ pipenv shell&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;¡Éxito! Sólo nos falta verificar que Nikola esté funcionando correctamente. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pipenv run nikola auto&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;En mi caso, al ejecutar ese comando recibo un Traceback que termina en&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;OSError: [Errno 98] La dirección ya se está usando&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Lo que significa que el puerto usado por defecto (8000) está ocupado. Para especificar el puerto a usar basta con agregar &lt;strong&gt;-p &lt;puerto&gt;&lt;/puerto&gt;&lt;/strong&gt; al final del comando. En el ejemplo, usaremos el puerto 8001.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;➜  bitblog git:(src) ✗ pipenv run nikola auto -p 8001&lt;/p&gt;
&lt;p&gt;Scanning posts........done!&lt;/p&gt;
&lt;p&gt;[2018-02-16T20:03:24Z] INFO: auto: Watching files for changes...&lt;/p&gt;
&lt;p&gt;[2018-02-16T20:03:24Z] INFO: ws4py: Using epoll&lt;/p&gt;
&lt;p&gt;[2018-02-16T20:03:24Z] INFO: auto: Serving HTTP on 127.0.0.1 port 8001...&lt;/p&gt;
&lt;p&gt;[2018-02-16T20:03:24Z] INFO: ws4py: Managing websocket [Local =&amp;gt; 127.0.0.1:8001 | Remote =&amp;gt; 127.0.0.1:56708]&lt;/p&gt;
&lt;p&gt;[2018-02-16T20:03:24Z] INFO: auto: &amp;lt;--- {'command': 'hello', 'protocols': ['http://livereload.com/protocols/official-6', 'http://livereload.com/protocols/official-7'], 'snipver': 1, 'ver': '2.2.1'}&lt;/p&gt;
&lt;p&gt;[2018-02-16T20:03:24Z] INFO: auto: ---&amp;gt; {"command": "hello", "protocols": ["http://livereload.com/protocols/official-7"], "serverName": "nikola-livereload"}
&lt;a name="voila" title="Usado solamente para el efecto recursivo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[2018-02-16T20:03:24Z] INFO: auto: &amp;lt;--- {'command': 'info', 'plugins': {'less': {'version': '1.0', 'disable': False}}, 'url': 'http://localhost:8001/'}&lt;/p&gt;
&lt;p&gt;[2018-02-16T20:03:24Z] INFO: auto: &lt;strong&gt;*&lt;/strong&gt;* Browser connected: http://localhost:8001/&lt;/p&gt;
&lt;p&gt;[2018-02-16T20:03:24Z] INFO: auto: &lt;strong&gt;*&lt;/strong&gt;* sending 0 pending messages&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Voilá!&lt;/h2&gt;
&lt;p&gt;Nikola está listo para ser usado. Para ver el estado actual del blog, ingresar a &lt;a href="http://localhost:8001/" title="8001 o el puerto en el que esté corriendo Nikola"&gt;http://localhost:8001/&lt;/a&gt; y buscar esta misma &lt;a href="http://blog.bitson.group/posts/creando-articulos-en-nikola/#voila" title="Haga clic aquí para sentir el efecto recursivo en sus propias venas"&gt;entrada&lt;/a&gt;. Todo este procedimiento para llegar al tan deseado momento...&lt;/p&gt;
&lt;h2&gt;Creando artículos en Nikola&lt;/h2&gt;
&lt;p&gt;Antes de crear una nueva entrada, es &lt;em&gt;muy&lt;/em&gt; importante tener el blog local actualizado, para no perder los últimos cambios ni generar conflictos con las ramas. Para esto basta con ejecutar:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;git pull&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ahora sí, para crear una nueva entrada en el blog, nos posicionamos en el directorio &lt;strong&gt;bitblog&lt;/strong&gt; y ejecutamos:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pipenv run nikola new_post -f markdown&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Sin desperdiciar un segundo, Nikola nos pedirá un título para el artículo...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Creating New Post&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Title: Creando artículos en Nikola&lt;/p&gt;
&lt;p&gt;Scanning posts........done!&lt;/p&gt;
&lt;p&gt;[2018-02-16T19:10:50Z] INFO: new_post: Your post's text is at: posts/creando-articulos-en-nikola.md&lt;/p&gt;
&lt;p&gt;➜  bitblog git:(src) ✗ ls&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Con el parámetro &lt;strong&gt;-f markdown&lt;/strong&gt; estamos especificando que el formato de marcado será &lt;a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet" title="Guía rápida de Markdown"&gt;Markdown&lt;/a&gt;. Si no lo especificamos, Nikola usará por defecto &lt;a href="https://github.com/ralsina/rst-cheatsheet/blob/master/rst-cheatsheet.rst" title='Guía rápida de reStructuredText). Al día de la fecha, [Nikola soporta](https://getnikola.com/handbook.html#id17 "Lista de lenguajes soportados por Nikola'&gt;reStructuredText&lt;/a&gt; reStructuredText, Markdown, Jupyter (IPython) Notebooks y HTML, entre otras. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nota:&lt;/strong&gt; El mismo &lt;a href="https://getnikola.com/blog/" title="Blog de Nikola"&gt;blog de Nikola creado con Nikola&lt;/a&gt; tiene una &lt;a href="https://getnikola.com/blog/markdown-can-affect-performance.html" title="Nota sobre el rendimiento de Markdown"&gt;nota&lt;/a&gt; sobre el rendimiento del Markdown con respecto a otros lenguajes de formateo.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Estamos listos para redactar la publicación...&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Your post's text is at: posts/creando-articulos-en-nikola.md&lt;/strong&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Abrimos el archivo que Nikola nos generó automáticamente y podemos ver que incluye un encabezado donde principalmente podemos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cambiarle fecha y título a la entrada&lt;/li&gt;
&lt;li&gt;Agregarle tags separados por coma y definirle categorías&lt;/li&gt;
&lt;li&gt;Agregar una descripción&lt;/li&gt;
&lt;li&gt;Declarar quién es el autor&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para esto último, alcanza con agregar la línea &lt;strong&gt;.. author: @nespino&lt;/strong&gt; al final del encabezado. Lo que debería quedar algo similar a:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;!--&lt;/p&gt;
&lt;p&gt;.. title: Creando artículos en Nikola&lt;/p&gt;
&lt;p&gt;.. slug: creando-articulos-en-nikola&lt;/p&gt;
&lt;p&gt;.. date: 2018-02-16 16:10:50 UTC-03:00&lt;/p&gt;
&lt;p&gt;.. tags: nikola, blog&lt;/p&gt;
&lt;p&gt;.. category: &lt;/p&gt;
&lt;p&gt;.. link: &lt;/p&gt;
&lt;p&gt;.. description: Cómo crear un artículo para el blog de bitson con Nikola&lt;/p&gt;
&lt;p&gt;.. type: text&lt;/p&gt;
&lt;p&gt;.. author: @nespino&lt;/p&gt;
&lt;p&gt;--&amp;gt;&lt;/p&gt;
&lt;p&gt;Escribe tu publicación aquí.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;De acá en adelante es fácil. Escribimos la entrada y guardamos el archivo. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt; INFO: auto: Watching files for changes...&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Nikola nos informa que cada vez que el contenido se modifique, el servidor local intentará reiniciar, reflejando los cambios en el navegador.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Símbolos básicos del markdown&lt;/h2&gt;
&lt;p&gt;Les dejo una síntesis de los elementos de markdown usados para la creación de esta nota:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;_Este renglón fue escrito envuelto entre dos guiones bajos seguidos&lt;/em&gt;&lt;/strong&gt;_ &lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; Este renglón comienza con cuatro símbolos de mayor (&amp;gt;&amp;gt;&amp;gt;&amp;gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;# Este título empieza con almohadilla (hasthag, símbolo de numeral, ta-te-tí...)&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Este renglón está en cursiva&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="explicacion grafica recursiva" src="http://blog.bitson.group/img/explicacion_grafica_recursiva.png" title="Explicación gráfica recursiva"&gt;&lt;/p&gt;
&lt;p&gt;&amp;gt; # __no tan importante__ ![recurso] Nosotros somos símbolos libres (estamos escapados)&lt;/p&gt;
&lt;p&gt;Este separador de línea de acá abajo se hace poniendo tres guiones seguidos (---)&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Insertando imágenes&lt;/h2&gt;
&lt;p&gt;Para agregar imágenes a nuestra publicación podemos hacerlo a través de su URL accesible desde internet o bien copiando la imagen a la carpeta:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;bitblog/files/img/ejemplo.png&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;De esta manera podremos declararla usando el siguiente formato: &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[identificador-del-recurso-de-imagen]: /img/ejemplo.png "Título de la imagen"&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Esto es, el identificador de la imagen entre corchetes, seguido de dos puntos, la URL de la imagen (que en este caso empieza con / porque saldrá
 de la carpeta files/img/ previamente cargada en nuestro repositorio de GitHub Pages) y entre comillas el título de la imagen, el que aparecerá 
al posicionar el cursor del mouse sobre la misma. &lt;/p&gt;
&lt;p&gt;Una vez que tengamos esta declaración (que no generará nada por pantalla) podremos insertar la imagen cuantas veces queramos, con un ! seguido de
 las palabras alternativas entre corchetes, y pegado al identificador de la imagen entre corchetes, como muestra la siguiente línea:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;![description alt imagen asistencia discapacidad visual yapa optimiza seo][identificador-del-recurso-de-imagen]&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Aplicando los cambios&lt;/h2&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;Una vez que hayamos terminado de redactar la nota y verifiquemos que se vea correctamente, sólo debemos ejecutar el comando:&lt;/p&gt;
&lt;h2&gt;pipenv run nikola github_deploy&lt;/h2&gt;
&lt;p&gt;lo que subirá los cambios al repositorio en la rama &lt;strong&gt;src&lt;/strong&gt; y GitHub Pages se encargará de mostrarlo en la dirección que tengamos configurada.&lt;/p&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;[2018-02-19T15:58:09Z] INFO: github_deploy: Successful deployment&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;¡Éxito!&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;PD: Hallazgos completamente inútiles aparecidos durante la redacción de la nota&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://guthub.com" title="GitHub mal escrito"&gt;guthub.com&lt;/a&gt; redirecciona a &lt;a href="http://github.com" title="GitHub bien escrito"&gt;github.com&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Animate a ejecutar &lt;strong&gt;pipenv --jumbotron&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>blog</category><category>nikola</category><guid>http://blog.bitson.group/posts/creando-articulos-en-nikola/</guid><pubDate>Fri, 16 Feb 2018 19:10:50 GMT</pubDate></item></channel></rss>