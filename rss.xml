<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Blog Bitson. Aprendimos de unos. Enseñamos a otros. Apostamos a la cultura colectiva.</title><link>http://blog.bitson.group/</link><description> Blog...</description><atom:link href="http://blog.bitson.group/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><copyright>Contents © 2018 &lt;a href="mailto:info@bitson.group"&gt;Cooperativa de Trabajo BITSON Ltda.&lt;/a&gt; </copyright><lastBuildDate>Thu, 05 Jul 2018 14:17:40 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>¿Por qué emplear la técnica de Entrega Continua?</title><link>http://blog.bitson.group/posts/por-que-emplear-la-tecnica-de-entrega-continua/</link><dc:creator>cuberti</dc:creator><description>&lt;div&gt;&lt;p&gt;--&amp;gt;&lt;/p&gt;
&lt;h2&gt;¿Por qué emplear la técnica de Entrega Continua?&lt;/h2&gt;
&lt;p&gt;La técnica de Entrega Continua (CD)  trae como consecuencia mayor velocidad y menor complejidad en el proceso de desarrollo de software. A su vez, permite lanzamientos mucho más seguidos, proporcionando retroalimentación inmediata.&lt;/p&gt;
&lt;p&gt;Implementar este proceso suele ser difícil para las organizaciones esto se debe principalmente a que no es un cambio en el proyecto tecnológico sino un cambio organizacional.&lt;/p&gt;
&lt;p&gt;La entrega continua automatiza todo el proceso de publicación de software. Cada revisión efectuada activa un proceso automatizado que crea, prueba y almacena la actualización. Las pruebas pueden incluir pruebas de la UI, de carga, de integración, de fiabilidad de la API, etc. De este modo, los desarrolladores pueden validar las actualizaciones de forma más exhaustiva y descubrir problemas por anticipado. Con la nube, resulta sencillo y rentable automatizar la creación y replicación de varios entornos de pruebas, algo que anteriormente era complicado en las instalaciones. La decisión definitiva de implementarla en un entorno de producción en vivo la toma el desarrollador.&lt;/p&gt;
&lt;p&gt;Cuando se la entrega continua se implementa de manera adecuada, los desarrolladores dispondrán siempre de un artefacto listo para su implementación que se ha sometido a un proceso de pruebas estandarizado. Esto significa mayor autonomía para el desarrollado. &lt;/p&gt;
&lt;p&gt;Con la entrega continua, todos los cambios en el código se crean, se prueban y se envían a un entorno de almacenamiento o pruebas de no producción. Pueden efectuarse varias pruebas al mismo tiempo antes de la implementación en producción. La diferencia entre la entrega continua y la implementación continua es la diferencia de aprobación manual para actualizar la producción. Con la implementación continua, la producción tiene lugar de manera automática, sin aprobación explícita. &lt;/p&gt;&lt;/div&gt;</description><guid>http://blog.bitson.group/posts/por-que-emplear-la-tecnica-de-entrega-continua/</guid><pubDate>Thu, 05 Jul 2018 14:09:48 GMT</pubDate></item><item><title>Django: Introducción a internacionalización y localización</title><link>http://blog.bitson.group/posts/django-introduccion-a-internacionalizacion-y-localizacion/</link><dc:creator>marcosdmyr</dc:creator><description>&lt;div&gt;&lt;h2&gt;Django: Introducción a internacionalización y localización&lt;/h2&gt;
&lt;p&gt;Cuando escribimos código, solemos hacerlo por defecto en inglés, ya que es el lenguaje predominante. Sin embargo, sucede que en algunos casos los usuarios de nuestro desarrollo necesitan ver la aplicación en su lenguaje local y este no es el inglés. Este artículo no es más que una breve guía o bitácora de las acciones a seguir para conseguir aprovechar las capacidades de traducción de Django.&lt;/p&gt;
&lt;p&gt;Particularmente los ejemplos serán en función de Django 2, y la documentación se encuentra disponible en el &lt;a href="https://docs.djangoproject.com/en/2.0/topics/i18n/"&gt;sitio oficial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.bitson.group/posts/django-introduccion-a-internacionalizacion-y-localizacion/"&gt;Leer más…&lt;/a&gt; (quedan 3 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>django</category><category>internacionalización</category><category>internationalization</category><category>localización</category><category>localization</category><guid>http://blog.bitson.group/posts/django-introduccion-a-internacionalizacion-y-localizacion/</guid><pubDate>Tue, 19 Jun 2018 01:02:41 GMT</pubDate></item><item><title>Preprocesando datos para Machine Learning</title><link>http://blog.bitson.group/posts/preprocesando-datos-para-machine-learning/</link><dc:creator>nespino</dc:creator><description>&lt;div&gt;&lt;p&gt;A todos nos gustaría llegar a casa y que la cena esté lista. A los algoritmos de &lt;a href="https://es.wikipedia.org/wiki/Aprendizaje_autom%C3%A1tico" title="¿Qué es Machine Learning?"&gt;Machine Learning&lt;/a&gt; también, por eso es que hoy vamos a dejarles cuatro recetas para que puedan alimentar en forma eficiente a sus procesos de entrenamiento.&lt;/p&gt;
&lt;p&gt;Las recetas que repasaremos el día de hoy son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Binarización&lt;/li&gt;
&lt;li&gt;Eliminación del valor medio&lt;/li&gt;
&lt;li&gt;Escalando&lt;/li&gt;
&lt;li&gt;Normalización&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Cada caso puede requerir el uso de uno o más de estos métodos en forma combinada.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Para simplificarnos las tareas matemáticas, vamos a hacer uso de dos paquetes &lt;a href="https://es.wikipedia.org/wiki/Software_libre_y_de_c%C3%B3digo_abierto" title="Diferencias entre Software Libre y Código Abierto"&gt;Open Source&lt;/a&gt; para desarrollos científicos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.numpy.org/" title="Numpy"&gt;Numpy&lt;/a&gt;, el cual se puede instalar junto a las de herramientas de &lt;a href="https://www.scipy.org/install.html" title="¿Cómo instalar SciPy?"&gt;SciPy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;El paquete de aprendizaje de Machine Learning &lt;a href="http://scikit-learn.org/stable/install.html" title="Scikit Learn"&gt;scikit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ambos se pueden instalar fácilmente desde &lt;strong&gt;pip&lt;/strong&gt; con los siguientes comandos:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pip install scipy&lt;/p&gt;
&lt;p&gt;pip install scikit-learn&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Primero vamos a importar las librerías necesarias y definir una matriz de ejemplo en numpy para usar en cada uno de los métodos que explicaremos a continuación&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;import numpy as np&lt;/p&gt;
&lt;p&gt;from sklearn import preprocessing&lt;/p&gt;
&lt;p&gt;matriz_ejemplo = np.array([[2.3, 2.9, -1.3, 5.2],&lt;/p&gt;
&lt;p&gt;                        
                   [1.3, -3.8, 2.1, 4.3],&lt;/p&gt;
&lt;p&gt;                        
                   [-8.9, 2.4, -1.1, 0],&lt;/p&gt;
&lt;p&gt;                        
                   [4.1, -3.9, 2.5, 2.1]])&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Binarización&lt;/h2&gt;
&lt;p&gt;Este método es comparable al que utilizan las entradas de las &lt;a href="https://es.wikipedia.org/wiki/Puerta_l%C3%B3gica" title="Compuertas Lógicas"&gt;Compuertas Lógicas&lt;/a&gt; con las que están hechas todos nuestros dispositivos electrónicos, en el que, habiendo definido un valor de umbral, podemos separar a los datos que ingresan de manera que los menores a ese umbral correspondan a 0 (False) y los mayores correspondan a 1 (True). Vamos a transformar esos valores numéricos en valores booleanos, usando un umbral de 2.4 con la función Binarizer:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;matriz_binarizada = preprocessing.Binarizer(threshold=2.4).transform(matriz_ejemplo)&lt;/p&gt;
&lt;p&gt;print("Matriz binarizada:\n", matriz_binarizada)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;y el resultado será:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Matriz binarizada:&lt;/p&gt;
&lt;p&gt;  [[0. 1. 0. 1.]&lt;/p&gt;
&lt;p&gt;  [0. 0. 0. 1.]&lt;/p&gt;
&lt;p&gt;  [0. 0. 0. 0.]&lt;/p&gt;
&lt;p&gt;  [1. 0. 1. 0.]]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Observen que el segundo elemento de la tercer fila de la matriz de ejemplo es 2.4, y al binarizarlo con el umbral 2.4 se obtiene un 0 en la misma posición.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pueden encontrar el código completo de este método en el archivo de ejemplo &lt;a href="http://blog.bitson.group/code/ai/binarizacion.py" download&gt;binarizacion.py&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Eliminación del valor medio&lt;/h2&gt;
&lt;p&gt;Este método es muy usado en preprocesamiento de datos para Machine Learning, con el cual se elimina el sesgo de las características en nuestro vector característico. La función que nos permite esta transformación se llama &lt;strong&gt;scale&lt;/strong&gt; y es muy sencilla de usar. Para verificar los resultados paso a paso incluímos algunos &lt;strong&gt;prints&lt;/strong&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;print("Matriz de ejemplo:")&lt;/p&gt;
&lt;p&gt;print(matriz_ejemplo)&lt;/p&gt;
&lt;p&gt;print("Promedio =", matriz_ejemplo.mean(axis=0))&lt;/p&gt;
&lt;p&gt;print("Desviación típica =", matriz_ejemplo.std(axis=0))&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;promedio_eliminado = preprocessing.scale(matriz_ejemplo)&lt;/p&gt;
&lt;p&gt;print("\nMatriz procesada:")&lt;/p&gt;
&lt;p&gt;print(promedio_eliminado)&lt;/p&gt;
&lt;p&gt;print("Promedio =", promedio_eliminado.mean(axis=0))&lt;/p&gt;
&lt;p&gt;print("Desviación Típica =", promedio_eliminado.std(axis=0))&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Lo que debería darnos como resultado:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Matriz de ejemplo:&lt;/p&gt;
&lt;p&gt; [[ 2.1  2.9 -1.3  5.2]&lt;/p&gt;
&lt;p&gt; [ 1.3 -3.8  2.1  4.3]&lt;/p&gt;
&lt;p&gt; [-8.9  2.4 -1.1  0. ]&lt;/p&gt;
&lt;p&gt; [ 4.1 -3.9  2.5  2.1]]&lt;/p&gt;
&lt;p&gt;Promedio = [-0.35 -0.6   0.55  2.9 ]&lt;/p&gt;
&lt;p&gt;Desviación típica = [5.04058528 3.25499616 1.75712834 2.01866292]&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Matriz procesada:&lt;/p&gt;
&lt;p&gt; [[ 0.48605467  1.07527009 -1.05285423  1.13936803]&lt;/p&gt;
&lt;p&gt; [ 0.32734294 -0.98310408  0.88212111  0.69352837]&lt;/p&gt;
&lt;p&gt; [-1.69623159  0.92166007 -0.93903215 -1.43659447]&lt;/p&gt;
&lt;p&gt; [ 0.88283399 -1.01382608  1.10976527 -0.39630192]]&lt;/p&gt;
&lt;p&gt;Promedio = [ 0.00000000e+00  0.00000000e+00 -1.11022302e-16  4.16333634e-17]&lt;/p&gt;
&lt;p&gt;Desviación Típica = [1. 1. 1. 1.]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Como pueden observar el promedio en la matriz procesada está cerca de 0 y la desviación típica es 1.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Pueden encontrar el código completo de este método en el archivo de ejemplo &lt;a href="http://blog.bitson.group/code/ai/eliminar_valor_medio.py" download&gt;eliminar_valor_medio.py&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Escalando&lt;/h2&gt;
&lt;p&gt;Es posible que nuestro vector característico incluya valores extremadamente altos y/o extremadamente bajos, por eso es importante escalar esos valores para que nuestro algoritmo opere con valores cercanos, y así evitamos características con valores desorbitantes.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;datos_escalados = preprocessing.MinMaxScaler(feature_range=(0, 1))&lt;/p&gt;
&lt;p&gt;datos_escalados = datos_escalados.fit_transform(matriz_ejemplo)&lt;/p&gt;
&lt;p&gt;print("Datos escalados:\n", datos_escalados)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Podemos comprobar que cada fila fue escalada para que sus valores mínimos y máximos sean 0 y 1 respectivamente, y los demás se transformaron en forma proporcional:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Datos escalados:&lt;/p&gt;
&lt;p&gt; [[0.84615385 1.                 0.
                1.                  ]&lt;/p&gt;
&lt;p&gt;  [0.78461538  0.01470588 0.89473684 0.82692308 ]&lt;/p&gt;
&lt;p&gt;  [0.                  0.92647059 0.05263158 0.
                ]&lt;/p&gt;
&lt;p&gt;  [1.                  0.
                1.
                0.40384615 ]]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Pueden encontrar el código completo de este método en el archivo de ejemplo &lt;a href="http://blog.bitson.group/code/ai/escalando.py" download&gt;escalando.py&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Normalización&lt;/h2&gt;
&lt;p&gt;La normalización se usa para modificar los valores en el vector característico y así poder medirlos en una escala común. Existen varios métodos para esto, así que vamos a presentarles los dos más comunes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Normalización L1&lt;/strong&gt;: Busca las menores desviaciones absolutas, y funciona asegurándose que la suma de los valores absolutos en cada fila sea 1.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Normalización L2&lt;/strong&gt;: Busca los menores cuadrados, y funciona asegurándose que la suma de los cuadrados sea 1.&lt;/p&gt;
&lt;p&gt;En general el método de Normalización L1 se considera más robusto que el de Normalización L2, porque el primero es más resistente a valores atípicos en los datos de origen. Es frecuente encontrar valores atípicos y no hay nada que podamos hacer al respecto, por eso buscamos técnicas que los ignoren de forma segura y efectiva durante los cálculos. En cambio, si los valores atípicos son importantes para el problema que estamos resolviendo, podríamos inclinarnos a usar la Normalización L2.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;datos_normalizados_l1 = preprocessing.normalize(matriz_ejemplo, norm='l1')&lt;/p&gt;
&lt;p&gt;datos_normalizados_l2 = preprocessing.normalize(matriz_ejemplo, norm='l2')&lt;/p&gt;
&lt;p&gt;print("Datos con Normalización L1:\n", datos_normalizados_l1)&lt;/p&gt;
&lt;p&gt;print("\nDatos con Normalización L2:\n", datos_normalizados_l2)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Usamos la función &lt;strong&gt;normalize&lt;/strong&gt;, indicando el tipo de normalización, y así podremos apreciar la diferencia por pantalla:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Datos con Normalización L1:&lt;/p&gt;
&lt;p&gt;[[ 0.1826087   0.25217391 -0.11304348  0.45217391]&lt;/p&gt;
&lt;p&gt;[ 0.11304348 -0.33043478  0.1826087   0.37391304]&lt;/p&gt;
&lt;p&gt;[-0.71774194  0.19354839 -0.08870968  0.        ]&lt;/p&gt;
&lt;p&gt;[ 0.32539683 -0.30952381  0.1984127   0.16666667]]&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Datos con Normalización L2:&lt;/p&gt;
&lt;p&gt;[[ 0.32578702  0.44989636 -0.20167768  0.80671072]&lt;/p&gt;
&lt;p&gt;[ 0.20808658 -0.60825309  0.33613986  0.68828639]&lt;/p&gt;
&lt;p&gt;[-0.95870891  0.25852824 -0.11849211  0.        ]&lt;/p&gt;
&lt;p&gt;[ 0.62758369 -0.59696986  0.38267298  0.32144531]]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Pueden encontrar el código completo de este método en el archivo de ejemplo &lt;a href="http://blog.bitson.group/code/ai/normalizacion.py" download&gt;normalizacion.py&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Espero que con estos métodos le den un merecido banquete a sus algoritmos, y que tengan ustedes una deliciosa y nutritiva cena.&lt;/p&gt;&lt;/div&gt;</description><category>ai</category><category>artificial inteligence</category><category>ia</category><category>inteligencia artificial</category><category>machine learning</category><category>numpy</category><category>preprocessing</category><category>python</category><category>scikit</category><category>scipy</category><guid>http://blog.bitson.group/posts/preprocesando-datos-para-machine-learning/</guid><pubDate>Mon, 11 Jun 2018 05:30:15 GMT</pubDate></item><item><title>Usando Python en funciones de Postgresql</title><link>http://blog.bitson.group/posts/usando-python-en-funciones-de-postgresql/</link><dc:creator>Cooperativa de Trabajo BITSON Ltda.</dc:creator><description>&lt;div&gt;&lt;p&gt;Usando Python en funciones de Postgresql&lt;/p&gt;
&lt;p&gt;Además de ser súper robusto a muy bajo costo, Postgresql, posee una muy buena característica, que es poder generar distintos tipos de funciones haciendo uso del lenguaje procedural, en este caso vamos a hablar de PL/Python, el cual, como pueden deducir por el titulpo del post, nos permite escribir codigo python dentro de las funciones.&lt;/p&gt;
&lt;p&gt;En el post de hoy nos vamos a concentrar en dejar la extensión disponible para una base de datos en particular y también haremos un pequeño ejemplo de uso para poder sacarnos las ganas.
&lt;/p&gt;&lt;p&gt;&lt;a href="http://blog.bitson.group/posts/usando-python-en-funciones-de-postgresql/"&gt;Leer más…&lt;/a&gt; (quedan 1 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>postgresql python functions sql bitson</category><guid>http://blog.bitson.group/posts/usando-python-en-funciones-de-postgresql/</guid><pubDate>Wed, 06 Jun 2018 02:57:46 GMT</pubDate></item><item><title>Píxel de seguimiento</title><link>http://blog.bitson.group/posts/pixel-de-seguimiento/</link><dc:creator>@maleCuervo</dc:creator><description>&lt;div&gt;&lt;p&gt;En este post voy a mostrar como agregar un píxel de Facebook y Google Analitycs a nuestro sitio web.&lt;/p&gt;
&lt;p&gt;¿Qué son y para qué sirven los píxeles de seguimiento?&lt;/p&gt;
&lt;p&gt;Los píxeles de seguimiento son una herramienta de análisis con la que podemos medir la eficacia de nuestras publicacines y entender las acciones que las personas realizan en nuestro sitio web.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Agregando píxel de Facebook&lt;/h2&gt;
&lt;p&gt;Agregar el píxel de facebook a nuestra web es relativamente sencillo, basta con seguir los pasos que están en la propia documentación de facebook. Aquí les mostraremos ese paso a paso.&lt;/p&gt;
&lt;p&gt;&lt;img alt="imagen" src="http://blog.bitson.group/img/pixel/intro-pixel.png"&gt;&lt;/p&gt;
&lt;p&gt;1) Vamos a la pestaña píxeles del administrador de anuncios, hacemos click en crear píxel e inmediatamente nos pide asignarle un nombre identificador, en este caso nuestro píxel se llama &lt;strong&gt;bitson.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="imagen" src="http://blog.bitson.group/img/pixel/confi-pixel.png"&gt;&lt;/p&gt;
&lt;p&gt;2) A continuación ingresamos a las configuraciones del píxel y hacemos click en "Instala el código manualmente".&lt;/p&gt;
&lt;p&gt;&lt;img alt="imagen" src="http://blog.bitson.group/img/pixel/instalacion-manual.png"&gt;&lt;/p&gt;
&lt;p&gt;3) En este momento nos muestra la pantalla con los pasos para terminar la configración.
Seleccionamos el código que nos brinda la configuración y lo pegamos en el encabezado de nuestras páginas, a las que le haremos seguimiento.&lt;/p&gt;
&lt;p&gt;&lt;img alt="imagen" src="http://blog.bitson.group/img/pixel/script-facebook.png"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Agregando píxel de Google Analytics&lt;/h2&gt;
&lt;p&gt;Para agregar este píxel debemos ingresar a &lt;a href="https://developers.google.com/analytics" title="Google Analytics"&gt;Google Analytics&lt;/a&gt; aquí encontraremos las diferentes opciones de configuración que nos brinda esta herramienta, debemos elegir la opción de &lt;a href="https://developers.google.com/analytics/devguides/collection/?hl=es-419" title="Configurar Google Analytics"&gt;Configurar Google Analytics&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;&lt;img alt="imagen" src="http://blog.bitson.group/img/pixel/google-analytics.png"&gt;  &lt;/p&gt;
&lt;p&gt;Cuando accedemos con esta opción, acontinuación nos muestra que configuración esta disponible para ser usada. En nuestro caso vamos a usar la opción &lt;a href="https://developers.google.com/analytics/devguides/collection/gtagjs/?hl=es-419" title="gtag.js"&gt;gtag.js&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="imagen" src="http://blog.bitson.group/img/pixel/gtag.png"&gt;&lt;/p&gt;
&lt;p&gt;Luego de esto, vamos a copiar el siguiente código, este fragmento que copiamos debe ser insertado después de la etiquet &lt;code&gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&lt;/code&gt; en todas las páginas de nuestro sitio web.&lt;/p&gt;
&lt;p&gt;&lt;img alt="imagen" src="http://blog.bitson.group/img/pixel/script-google.png"&gt;&lt;/p&gt;
&lt;p&gt;Esto es todo lo que necesitamos para realizar el seguimiento en nuestros sitios, controlando publicaciones e interacciones de nuestros visitantes, solo necesitamos hacer uso del código que nos brinda Facebook y Google Analytics.&lt;/p&gt;&lt;/div&gt;</description><guid>http://blog.bitson.group/posts/pixel-de-seguimiento/</guid><pubDate>Mon, 21 May 2018 18:34:00 GMT</pubDate></item><item><title>Acceso root SSH desde IP o dominio</title><link>http://blog.bitson.group/posts/acceso-root-ssh-desde-ip-o-dominio/</link><dc:creator>lecovi</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img alt="Image" src="http://blog.bitson.group/img/coding-computer-hacker-97077.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Hace poco con la coope nos mudamos y tuvimos que cambiar el ISP (&lt;em&gt;Internet
Service Provider&lt;/em&gt;) y eso motivó a que tuviéramos que hacer algunos cambios, en
muchos aspectos pero no viene al caso, puntualmente en el server que tenemos
dentro de la ofi.
Tuve que desempastarme un poco y volver a leer el manual de &lt;strong&gt;ssh&lt;/strong&gt; para
recordar algunas cuestiones que les comparto a continuación.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.bitson.group/posts/acceso-root-ssh-desde-ip-o-dominio/"&gt;Leer más…&lt;/a&gt; (quedan 1 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><category>devops ssh root</category><guid>http://blog.bitson.group/posts/acceso-root-ssh-desde-ip-o-dominio/</guid><pubDate>Fri, 13 Apr 2018 13:15:07 GMT</pubDate></item><item><title>Debugueando react-native en Android</title><link>http://blog.bitson.group/posts/debugueando-react-native-en-android/</link><dc:creator>D</dc:creator><description>&lt;div&gt;&lt;p&gt;En este post vamos a mostrar herramientas para debuguear la aplicacion que estemos desarrollando en react-native, igual que en mi post anterior voy a mostrar como hacerlo en linux.&lt;/p&gt;
&lt;h3&gt;Requisitos&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Internet (claramente).&lt;/li&gt;
&lt;li&gt;Tener una aplicacion en react-native (de ser posible la del post anterior, paso el &lt;a href="http://blog.bitson.group/posts/empezando-con-android-y-react-native/"&gt;link&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Paciencia.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Manos a la obra&lt;/h3&gt;
&lt;p&gt;Abrimos el Android Studio, vamos a &lt;code&gt;tools &amp;gt; AVD Manager&lt;/code&gt; y corremos un emulador de Android.&lt;/p&gt;
&lt;p&gt;Una vez que tengamos el emulador corriendo abrimos en una terminal el directorio donde tengamos nuestra app. En este caso seguimos usando la &lt;code&gt;rn-app&lt;/code&gt; que hicimos el post anterior. Una vez en el directorio ejecutamos &lt;code&gt;npm run android&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Una vez que la aplicacion se haya abierto en el emulador hacemos &lt;code&gt;ctrl + m&lt;/code&gt; eso va a abrir una serie de opciones, ya iremos explicando una por una (aunque hayan opciones bastante obvias). Hacemos click en &lt;code&gt;Debug JS Remotely&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Eso lo que va hacer es abrirnos una tab en chrome/firefox con una texto parecido a este:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;React Native JS code runs as a web worker inside this tab.

Press Ctrl⇧J to open Developer Tools. Enable Pause On Caught Exceptions for a better debugging experience.

You may also install the standalone version of React Developer Tools to inspect the React component hierarchy, their props, and state.

Status: Debugger session #0 active.
&lt;/pre&gt;


&lt;p&gt;Abrimos la consola del explorador con la tecla &lt;code&gt;F12&lt;/code&gt; y vemos que dice&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;Running application "rnapp" with appParams: {"rootTag":11}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF
&lt;/pre&gt;


&lt;p&gt;Eso quiere decir que nuestro navegador ya esta "escuchando" a la aplicacion de react-native. Lo que podemos hacer para probarlo es ir al archivo &lt;code&gt;app.js&lt;/code&gt; y dentro de la funcion &lt;code&gt;render()&lt;/code&gt; hacer un simple &lt;code&gt;console.log('testing debug...');&lt;/code&gt; eso se va a mostrar en la consola de su explorador.&lt;/p&gt;
&lt;p&gt;Pero vamos un poco mas alla, creemos un boton y veamoslo funcionar un poco mas copado.&lt;/p&gt;
&lt;p&gt;Vamos a poner un &lt;code&gt;Button&lt;/code&gt; en nuestra app y ver por consola un mensaje que se escribe cuando hacemos click. En esta parte vamos a copiar y pegar el codigo, ya haremos un post explicando componentes y funciones.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;React&lt;/span&gt; &lt;span class="nn"&gt;from&lt;/span&gt; &lt;span class="s1"&gt;'react'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;StyleSheet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Button&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="s1"&gt;'react-native'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;App&lt;/span&gt; &lt;span class="n"&gt;extends&lt;/span&gt; &lt;span class="n"&gt;React&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;testDebug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'testing debug'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;styles&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Open&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="n"&gt;App&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="n"&gt;working&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Changes&lt;/span&gt; &lt;span class="n"&gt;you&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;automatically&lt;/span&gt; &lt;span class="nb"&gt;reload&lt;/span&gt;&lt;span class="o"&gt;.&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Shake&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;phone&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;developer&lt;/span&gt; &lt;span class="n"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;.&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;
              &lt;span class="n"&gt;onPress&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;testDebug&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
              &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Press Me!"&lt;/span&gt;
              &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"#841584"&lt;/span&gt;
              &lt;span class="n"&gt;accessibilityLabel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Learn more about this purple button"&lt;/span&gt;
            &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;View&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;const&lt;/span&gt; &lt;span class="n"&gt;styles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StyleSheet&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'#fff'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;alignItems&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'center'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;justifyContent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'center'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Simplemente lo que hace este mini codigo, es mostrar un mensaje en el press(click) del boton de nuestra app. Ahora cada vez que cliqueamos podemos ver por consola que se muestra un mensaje que dice &lt;code&gt;testing debug&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Otras herramientas&lt;/h3&gt;
&lt;p&gt;Contamos con una herramienta similar a la consola, pero que corre independientemente del navegador, &lt;a href="https://github.com/jhen0409/react-native-debugger"&gt;react-native-debugger&lt;/a&gt;.
Vamos a la parte de Installation al link que dice &lt;code&gt;releases&lt;/code&gt;, y nos bajamos la version para linux.&lt;/p&gt;
&lt;p&gt;Cerramos la tab donde estabamos debugueando anteriormente y volvemos a hacer &lt;code&gt;ctrl + M&lt;/code&gt; para desactivar el &lt;code&gt;Debug JS Remotely&lt;/code&gt;.
Vamos a la carpeta donde haya descargado, extraemos el zip y abrimos el archivo &lt;code&gt;React Native Debugger&lt;/code&gt;. Vamos a ver que es similar al inspector de elementos de chrome. Repetimos los pasos pero con la aplicacion abierta y vemos que ahora el mensaje nos lo tira en la consola del &lt;code&gt;React Native Debugger&lt;/code&gt;.
Lo que es interesante de esta aplicacion es que en el panel de abajo a la izquierda podemos ver el arbol del "DOM" (no es un DOM exactamente pero es simil) y podemos editar al vuelo las propiedades lo cual nos ahorra mucho tiempo de prueba y recarga.
Por ejemplo vayamos al &lt;code&gt;&amp;lt;Button&amp;gt;&lt;/code&gt; dentro del explorador de elementos y cambiemos la propiedad &lt;code&gt;color&lt;/code&gt; a &lt;code&gt;#333&lt;/code&gt; veamos como el boton cambia de color, tambien podemos hacer "click" (press) y ver como nuestro mensaje sale por la consola.&lt;/p&gt;
&lt;p&gt;Muy bien, ya tenemos la aplicacion instalada y las herramientas para debuguearla, FELICITACIONES!&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;Gracias por leer, cualquier consulta la pueden dejar escrita en el blog y la contestamos.&lt;/p&gt;
&lt;p&gt;Saludos,&lt;/p&gt;
&lt;p&gt;D.&lt;/p&gt;&lt;/div&gt;</description><category>android</category><category>javascript</category><category>react</category><category>react-native</category><guid>http://blog.bitson.group/posts/debugueando-react-native-en-android/</guid><pubDate>Fri, 16 Mar 2018 16:24:15 GMT</pubDate></item><item><title>Cooperativismo, Software Libre y Feminismo</title><link>http://blog.bitson.group/posts/cooperativismo-software-libre-y-feminismo/</link><dc:creator>cuberti</dc:creator><description>&lt;div&gt;&lt;h2&gt;Cooperativismo, software libre y feminismo.&lt;/h2&gt;
&lt;p&gt;Uno crece en un entorno delimitado y pareciera que siempre tiene que mantenerse dentro de esos parámetros. ¿Acaso no se ve como un logro que un niñx pueda pintar dentro de los bordes? ¿Es realmente un triunfo propio? ¿De la sociedad? ¿Es un simple proceso de aprendizaje?&lt;/p&gt;
&lt;p&gt;Asociarnos a una Cooperativa implicó un proceso de resignificación de nuestra vida laboral. Incluso, y con el perdón de los amigos y familias, esos límites entre “el horario de oficina” y “casa” se fueron borrando. Creemos en un sistema solidario, donde las verticalidades son solo un fantasma, donde la asamblea arrasa con la meritocracia, donde la lucha es continua. Creemos en nosotros y no como una mínima parte de un sistema sino como seres libres y pensantes.&lt;/p&gt;
&lt;p&gt;Convicción desde nuestro punto de vista es implicancia.&lt;/p&gt;
&lt;p&gt;Desde esa estructura decidimos realizar nuestras tareas en sistemas operativos libres. Una vez más nos encontramos cuestionando lo establecido. No podemos ceder nuestra libertad a sistemas restrictivos, capitalistas y excluyentes. Creemos con convicción que las tecnologías libres nos pueden abrir terreno para la emancipación individual y colectiva ¡Lo colectivo por sobre las individualidades!&lt;/p&gt;
&lt;p&gt;Convicción desde nuestro punto de vista es implicancia.&lt;/p&gt;
&lt;p&gt;Entonces, desde nuestros cimientos: cooperativismo y software libre no nos queda otra que gritar por el feminismo. Nuestras banderas son la igualdad y la libertad pero no sólo como expresiones de deseo sino desde nuestra cotidianidad. &lt;/p&gt;
&lt;p&gt;Margarita Salas explica en “Género y software libre en América Latina. Un estudio de caso” que el movimiento de los sistemas operativos libres está vinculada a “la creación colectiva, la apropiación comunitaria del conocimiento y la promoción de una filosofía de inclusión, diversidad y solidaridad”.&lt;/p&gt;
&lt;p&gt;Convicción desde nuestro punto de vista es implicancia.&lt;/p&gt;
&lt;p&gt;Al día de hoy, se calcula que en el sector de producción de software apenas el 20% son mujeres. Y esta desigualdad es aún más fuerte cuando hablamos de software libre donde la participación femenina es del 2% ¡Queremos que este porcentaje cambie! &lt;/p&gt;
&lt;p&gt;Hoy y siempre vamos a luchar por nuestros ideales. ¡Libertad, igualdad, inclusión, solidaridad y diversidad!&lt;/p&gt;
&lt;p&gt;¡Creemos en esta forma y queremos ver un mundo así!&lt;/p&gt;&lt;/div&gt;</description><category>cooperativismo</category><category>feminismo</category><category>software libre</category><guid>http://blog.bitson.group/posts/cooperativismo-software-libre-y-feminismo/</guid><pubDate>Thu, 08 Mar 2018 18:48:31 GMT</pubDate></item><item><title>Empezando a usar Google AdWords Express</title><link>http://blog.bitson.group/posts/empezando-a-usar-google-adwords-express/</link><dc:creator>nespino</dc:creator><description>&lt;div&gt;&lt;p&gt;El día de hoy vamos a ver cómo empezar a usar &lt;a href="https://adwords.google.com/express" title="Google AdWords Express"&gt;Google AdWords Express&lt;/a&gt;, aprovechando los descuentos que ofrecen y andan dando vueltas. En caso de no haber recibido uno, podés ponerte en contacto y hacer ruido de que tenés una empresa o un dominio o aparición en internet y te lo envían.&lt;/p&gt;
&lt;p&gt;Para empezar, les dejo el número de teléfono gratuito para asistencia a cuentas con inversiones de bajo monto (al día del a fecha, inversiones menores a $2500 ARS mensuales): &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0800-222-4664&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Si la inversión supera ese monto, el número entonces será:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;0800-666-1866 ó 0800-666-0668&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;A continuación, el tutorial empleará el signo $ para referirse a ARS (Pesos Argentinos)&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;Empezando a usar Google AdWords Express&lt;/h3&gt;
&lt;p&gt;Nos llegó por correo tradicional a las oficinas de Bitson, un código que otorgaba $700 de crédito en Adwords, con el único requisito de hacer un pago previo de $300. Pero como estábamos de suerte, también le llegó otro a @lecovi, donde el monto para el mismo requisito era de $175. Se pueden imaginar cuál de los dos usamos, de todas formas el camino a recorrer es exactamente igual.&lt;/p&gt;
&lt;p&gt;El código:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;AHT9T-KURGR-A9MP&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Las condiciones detalladas:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Activar o reactivar una cuenta en Google AdWords&lt;/li&gt;
&lt;li&gt;Antes de los 14 días de dicha activación, ingresar el código en el &lt;a href="https://adwords.google.com/aw/promotions" title="Ingresar cupones de descuento"&gt;apartado correspondiente&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Usar $175 en publicidad&lt;/li&gt;
&lt;li&gt;Abonar esos $175 a través de Banelco, PagoMisCuentas, tarjeta de débito o crédito (&lt;a href="https://billing.google.com/payments/u/0/paymentsinfofinder" title="Información de &amp;gt;pago"&gt;https://billing.google.com/payments/u/0/paymentsinfofinder&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Esperar 5 días hábiles hasta que se acredite el beneficio, del cual cabe destacar, que el sistema no dará aviso.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;AdWords tampoco emitirá ninguna clase de aviso cuando se acabe el crédito promocional, es necesario revisar periódicamente la cuenta para no generar deudas indeseables.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;También es posible que ingresemos a un nuevo programa llamado AdWords Express. Tiene las mismas funciones y costos que AdWords tradicional, pero la interfaz gráfica es muchísimo más sencilla. ¡Altamente recomendado para principiantes!&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Configuración de la primer campaña en Google AdWords Express&lt;/h3&gt;
&lt;p&gt;Estos son los datos que nos fueron requeridos. Es bastante intuitivo, y algunos no requieren explicación adicional...&lt;/p&gt;
&lt;p&gt;Sitio a difundir: &lt;br&gt;
(La &lt;a href="https://es.wikipedia.org/wiki/Localizador_de_recursos_uniforme" title="Significado de URL..."&gt;URL&lt;/a&gt; del sitio que queremos promocionar) &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://bitson.group/cursos/" title="Cursos de bitson"&gt;https://bitson.group/cursos/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Objetivo: &lt;br&gt;
(Qué es lo que esperamos que pase en nuestro sitio)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Acción en el sitio web (registro en el formulario)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Radio de acción:&lt;br&gt;
(¿Dónde queremos que se muestre nuestro anuncio?)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Mostrar el anuncio en un radio de 15km desde la empresa&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Para esto, se puede definir una dirección específica o vincular directamente con &lt;a href="https://www.google.es/intl/es/business/" title="Google My Business"&gt;Google My Business&lt;/a&gt;, que tomará la dirección automáticamente.
En base a esta configuración, AdWords nos presenta la siguiente estimación:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;El tamaño de la audiencia potencial, será entonces de 18.424.498 personas por mes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Esto significa que se prevé que 18 millones de personas verán el anuncio. ¿Y tenemos que pagar por todo esto? Por supuesto que no, sólo pagaremos por cada click. A este costo se lo define como &lt;a href="https://support.google.com/adwords/answer/116495" title="Costo por click"&gt;CPC&lt;/a&gt; (Costo por click o Cost per click). Este valor está determinado por el ranking de nuestro anuncio y la oferta para el mismo tipo de anuncio en la misma región. En definitiva, este valor lo va a definir Google, y no podemos tomar control sobre eso, pero sí podemos limitar cuánto estamos dispuestos a pagar por ese click. En función de ese límite, se establecerá este ranking, lo que definirá en qué orden será mostrado en el navegador junto a las publicidades de la competencia. A todo este proceso complejo se lo llama subasta. Cuando muchos anunciantes compiten por la misma aparición de publicidad, AdWords seleccionará y mostrará únicamente a los anuncios de mayor ranking.&lt;/p&gt;
&lt;p&gt;En adelante, para acceder al panel de control, podemos hacerlo a través de &lt;a href="https://adwords.google.com/express/plus/" title="Panel de Control de Google AdWords Express"&gt;https://adwords.google.com/express/plus/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Definiendo el producto&lt;/h2&gt;
&lt;p&gt;Se promociona: &lt;br&gt;
(¿Qué clase de producto o servicio estamos ofreciendo?)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Curso de programación&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Mostrar anuncio a personas que busquen:&lt;br&gt;
(Listado de categorías relativas a nuestro producto o servicio)&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Curso de Programación&lt;/li&gt;
&lt;li&gt;Introducción a la programación web&lt;/li&gt;
&lt;li&gt;Informática y Programación&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Gracias a la información brindada, Google AdWords filtrará a los destinatarios de nuestro anuncio, de manera de no desperdiciar clicks (que paguemos por aquellas personas curiosas que entran sólo para ver qué es) y para no llenar las búsquedas de Google con publicidad no relevante para quien esté navegando.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;El tamaño de la audiencia potencial, será entonces de 11.516 personas por mes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Diseño del anuncio:&lt;br&gt;
(Dentro del formato ofrecido por AdWords, contamos con 3 renglones para atraer a nuestros clientes hacia nuestro sitio)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Aprendé Python en bitson - Sumate a los que saben
Anuncio bitson.group
Aprovechá el año y arrancá en Febrero! Precio promocional&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Lo que nos da como resultado:&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://bitson.group/cursos" title="Cursos en bitson"&gt;&lt;img alt="adwords curso bitson python" src="http://blog.bitson.group/img/adwords.png" title="Anuncio de Curso de Python en bitson"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;¿Cuanto vamos a invertir?&lt;/h2&gt;
&lt;p&gt;Como primera prueba, decidimos invertir lo mínimo requerido para acceder a la asistencia telefónica, $2500 ARS mensuales. Por menos de ese valor la ayuda que recibís por teléfono es mínima, por el contrario, a partir de ese valor de inversión la asistencia es muy completa y por demás, agradable.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Inversión $82,24 ARS$ al día de media ($2500 al meś de máximo)&lt;/p&gt;
&lt;p&gt;Rendimiento estimado: 996 - 1669 visualizaciones, 244 - 409 clics&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
Cuándo pagas&lt;/p&gt;
&lt;p&gt;Solo pagarás cuando alguien haga clic en tu anuncio o llame a tu empresa.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
Cuánto cuesta&lt;/p&gt;
&lt;p&gt;Cada clic tiene un coste distinto, pero no gastarás más del presupuesto mensual que hayas establecido.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
Qué ocurre si cambias de idea&lt;/p&gt;
&lt;p&gt;Prueba a publicar el anuncio sin compromiso, ya que puedes cambiar el presupuesto o cancelar su publicación en cualquier momento.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Para facilitar los pagos, dejé registrada una tarjeta de crédito, de manera que los pagos se hagan en forma automática. También es posible entrar a la sección de Facturación y emitir los pagos manualmente.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Les recomendamos aumentar el seguimiento sobre sus publicaciones, conectando nuestro sitio con &lt;a href="https://www.google.com/analytics/" title="Google Analytics"&gt;Google Analytics&lt;/a&gt;, usando el tag que ofrece Adwords Express. Para una mejor medición de nuestro sitio les recomendamos utilizar el &lt;a href="https://developers.google.com/analytics/resources/concepts/gaConceptsTrackingOverview?hl=es-419" title="Píxel de seguimiento"&gt;Píxel de seguimiento&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;¿Cómo hacer para recibir el dinero promocional?&lt;/h2&gt;
&lt;p&gt;En nuestro caso, pasadas las 48hs de haber el pago mínimo requerido para la activación del cupón promocional ($175 ARS), nos apareció el crédito de $700 ARS en nuestra cuenta. &lt;/p&gt;
&lt;p&gt;¡OJO! Uno debe ser responsable a la hora de armar las campañas. Lo mejor es darles una fecha de comienzo y una de finalización, contemplando el costo diario, de manera que sepamos de antemano cuánto dinero estamos dispuestos a invertir en publicidad. Para Google AdWords, es suficiente con que hayan hecho click en nuestro anuncio para cargarlo en nuestra cuenta. ¿Es confiable? Podríamos decir que sí. El mismo AdWords te ofrece la posibilidad de analizar desde donde viene el tráfico, y armar estadísticas basado en distintos paramétros. Hay mucho para investigar al respecto, y muchas consideraciones a la hora de armar una campaña.&lt;/p&gt;
&lt;p&gt;Así fue que dimos nuestro primer curso en &lt;a href="https://bitson.group" title="bitson"&gt;bitson&lt;/a&gt;, y que lo publicitamos a través de &lt;a href="https://adwords.google.com/" title="Google AdWords"&gt;Google AdWords&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</description><category>adwordsexpress</category><category>comunicacion</category><category>google</category><category>marketing</category><category>publicidad</category><category>sem</category><guid>http://blog.bitson.group/posts/empezando-a-usar-google-adwords-express/</guid><pubDate>Thu, 01 Mar 2018 17:24:36 GMT</pubDate></item><item><title>Empezando con Android y React-Native</title><link>http://blog.bitson.group/posts/empezando-con-android-y-react-native/</link><dc:creator>D</dc:creator><description>&lt;div&gt;&lt;p&gt;En este post vamos a configurar el ambiente en linux para empezar a programar aplicaciones
en react-native para android (iOS queda fuera por razones obvias :grimacing:)&lt;/p&gt;
&lt;h3&gt;Requisitos:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Internet (claramente).&lt;/li&gt;
&lt;li&gt;Conocimientos minimos sobre variables de entorno (como setearlas).&lt;/li&gt;
&lt;li&gt;Paciencia.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;1: Instalar Java&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Abrimos la terminal e instalamos java (version 8).&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get update
sudo apt-get install openjdk-8-jdk
&lt;/pre&gt;


&lt;p&gt;Una vez finalizado de instalar ejecutamos&lt;/p&gt;
&lt;p&gt;&lt;code&gt;java -version&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Para ver si instalo correctamente y deberiamos ver algo similar a esto&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;openjdk version "1.8.0_151"
OpenJDK Runtime Environment (build 1.8.0_151-8u151-b12-1~deb9u1-b12)
OpenJDK 64-Bit Server VM (build 25.151-b12, mixed mode)
&lt;/pre&gt;


&lt;h3&gt;2: Descargar e Instalar Android Studio&lt;/h3&gt;
&lt;p&gt;Paso simple vamos a este &lt;a href="https://developer.android.com/studio/index.html?hl=es-419"&gt;link&lt;/a&gt; y descargamos
Android Studio (for linux).
Una vez que lo bajamos, extraemos la carpeta en &lt;code&gt;/opt/&lt;/code&gt; y dentro de la carpeta &lt;code&gt;android-studio&lt;/code&gt; ejecutamos el archivo &lt;code&gt;studio.sh&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Seleccionar la opcion que queramos si queremos importar configuraciones de instalaciones previas de Android Studio o no, click en OK.&lt;/p&gt;
&lt;p&gt;Aca es donde deciamos que habia que tener paciencia, el wizard de instalacion de Android Studio te va a guiar el resto del proceso, el cual incluye la descarga del SDK (Software Development Kit), componentes que son necesarios para el desarrollo de apps. Parece que se va a trabar pero simplemente hay que esperar a que baje todos los archivos, va a depender mucho de tu velocidad de internet.&lt;/p&gt;
&lt;h3&gt;2.1: Librerias para PCs de 64-bit&lt;/h3&gt;
&lt;p&gt;Si tenes una pc con un SO de 64-bits tenes que instalarte estas librerias para poder trabajar.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 libbz2-1.0:i386
&lt;/pre&gt;


&lt;h3&gt;3: Descarga version de SDK en AS&lt;/h3&gt;
&lt;p&gt;Abrimos el android studio, creamos un proyecto (esto es obligatorio, pero no le den demasiada importancia no vamos a usarlo). Dejamos trabajar al IDE y en la consola vemos que nos va a pedir de updatar &lt;code&gt;gradle&lt;/code&gt;, hacemos click e instalamos. Una vez terminado de instalar, vamos a &lt;code&gt;Tools &amp;gt; Android &amp;gt; SDK Manager&lt;/code&gt; ahi vamos a seleccionar la version de Android con la que queremos trabajar (yo elijo la version 6 uds pueden elegir la que quieran). Despues vamos a la tab &lt;code&gt;SDK Tools&lt;/code&gt; y nos fijamos que esten chequeadas las opciones &lt;code&gt;Android SDK Tools&lt;/code&gt; y &lt;code&gt;Android SDK Platform-Tools&lt;/code&gt; de no estarlas las chequeamos, e instalamos ambas o la que falte.&lt;/p&gt;
&lt;h3&gt;4: Variables de entorno&lt;/h3&gt;
&lt;p&gt;Vamos a setear las variables de entorno para "decirle" al sistema donde ir a buscar las SDK-Tools.
Abrimos la terminal y escribimos:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;export ANDROID_HOME=$HOME/Android/Sdk
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/platform-tools
&lt;/pre&gt;


&lt;p&gt;Si queres que queden fijas en la terminal modifica tu archivo &lt;code&gt;~/.bashrc&lt;/code&gt; agregando esas 3 lineas al final y reiniciando la consola.
Para testear si expusimos bien las variables en una terminal ejecutamos el comando&lt;/p&gt;
&lt;p&gt;&lt;code&gt;adb --version&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El comando adb es una herramienta dentro de los SDK-Tools simplemente vamos a ver si encuentra ese archivo pidiendole la version, la salida deberia verse parecida a esta:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;Android Debug Bridge version 1.0.39
Version 0.0.1-4500957
Installed as /home/{USER}/Android/Sdk/platform-tools/adb
&lt;/pre&gt;


&lt;h3&gt;5: Android Virtual Device Manager&lt;/h3&gt;
&lt;p&gt;El Android Studio cuenta con un emulador de android que podemos ejecutar en la PC, muy util para desarrollar y debuguear. Dentro del AS vamos a &lt;code&gt;Tools &amp;gt; Android &amp;gt; AVD Manager&lt;/code&gt; y cliqueamos &lt;code&gt;Create Virtual Device&lt;/code&gt; esto va a crear un nuevo emulador, seleccionan el tipo de dispositivo que quieren, la version de Android (instalada previamente en el paso 3). Una vez creada van a ver en la lista de dispositivos que se encuentra el suyo y a la derecha dentro de la columna &lt;code&gt;Actions&lt;/code&gt; hay un boton de play que les permite ejecutarla.&lt;/p&gt;
&lt;h3&gt;5.1: Detalle sobre AVD&lt;/h3&gt;
&lt;p&gt;El emulador consume mucha RAM, lo cual va a ser que se realentice el proceso de buildear y de ejecutar la aplicacion, tambien presenta problemas en placas de video. Por ejemplo yo tengo una placa nVidia y para poder correr el AVD en mi maquina tuve que instalarme los drivers de linux de lo contrario el emulador abria y cerraba automaticamente. Les dejo el &lt;a href="https://wiki.debian.org/es/NvidiaGraphicsDrivers"&gt;link&lt;/a&gt; para instalar los drivers de nVidia en debian, para los drivers de otras placas de video consulten con nuestro buen amigo google.&lt;/p&gt;
&lt;h3&gt;6: Node.js &amp;amp; npm&lt;/h3&gt;
&lt;p&gt;Ya tenemos instalado y corriendo nuestro emulador de android en nuestra pc ahora bien la pregunta del millon...Como arrancamos a programar?
Simple, tenemos que bajarnos (para variar) &lt;code&gt;nodejs&lt;/code&gt; y &lt;code&gt;npm&lt;/code&gt;, son programas que nos van a permitir compilar nuestro codigo en JS y ejecutarlo como si fuera nativo, manos a la obra!
Para node vamos a la terminal de linux y ejecutamos:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash -
sudo apt-get install -y nodejs
&lt;/pre&gt;


&lt;p&gt;Eso basta para tener &lt;code&gt;node&lt;/code&gt; y &lt;code&gt;npm&lt;/code&gt; (node package manager) instalados en tu PC, para comprobarlo hacemos
&lt;code&gt;node -v &amp;amp;&amp;amp; npm -v&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;La salida deberia ser similar a:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;v6.13.0
3.10.10
&lt;/pre&gt;


&lt;h3&gt;7: create-react-native-app&lt;/h3&gt;
&lt;p&gt;Muy bien, continuando con nuestro brevisimo post, en la terminal hacemos un &lt;code&gt;sudo npm i -g create-react-native-app&lt;/code&gt; lo cual va a instalar un paquete de node de forma global (por eso sudo y por eso -g), para facilitarnos la creacion desde 0 de un proyecto en react native, dejo el &lt;a href="https://github.com/react-community/create-react-native-app"&gt;link&lt;/a&gt; para que puedan ver el readme e interiorizarse mas si quieren.&lt;/p&gt;
&lt;h3&gt;8: Ejecucion&lt;/h3&gt;
&lt;p&gt;Una vez instalado el paquete vamos al destino donde querramos instalar el proyecto y en una terminal hacemos &lt;code&gt;create-react-native-app rn-app&lt;/code&gt; eso nos va a crear una app llamada rn-app (uds le pueden poner el nombre que quieran). Va a tardar un rato (otra vez), pero una vez que termine ya estamos listos para trabajar. Entramos a la carpeta &lt;code&gt;cd rn-app&lt;/code&gt; y ejecutamos &lt;code&gt;npm start&lt;/code&gt; en una consola y en otra &lt;code&gt;npm run android&lt;/code&gt; si tenemos el emulador abierto la aplicacion se va a ejecutar en el mismo, sino va a fallar y salir.&lt;/p&gt;
&lt;h3&gt;8.1: Ejecucion en dispositivo&lt;/h3&gt;
&lt;p&gt;Para este paso vamos a necesitar un cable usb y un celular (con android obviamente).
Vamos a habilitar el debug con USB en el celular, para eso hay que tener las opciones de desarrollador activadas, eso lo hacemos yendo a &lt;code&gt;Configuracion &amp;gt; Acerca de&lt;/code&gt; y cliqueamos el numero de build 7 veces, despues volvemos a configuracion y vamos a tener las &lt;code&gt;Opciones de Desarrollador&lt;/code&gt;, entramos y habilitamos el "Debug por USB".&lt;/p&gt;
&lt;p&gt;Enchufamos el celular a la computadora y seleccionamos la opcion de transferir fotos via PTP.&lt;/p&gt;
&lt;p&gt;En la terminal ejecutamos &lt;code&gt;lsusb&lt;/code&gt; y obtenemos algo similar a esto:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;Bus 002 Device 007: ID 1004:631d LG Electronics, Inc. Optimus Android Phone (Camera/PTP Mode)
Bus 002 Device 003: ID 1a81:1006 Holtek Semiconductor, Inc.
Bus 002 Device 002: ID 8087:0020 Intel Corp. Integrated Rate Matching Hub
Bus 002 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Bus 001 Device 003: ID 04f2:b1d6 Chicony Electronics Co., Ltd CNF9055 Toshiba Webcam
Bus 001 Device 002: ID 8087:0020 Intel Corp. Integrated Rate Matching Hub
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
&lt;/pre&gt;


&lt;p&gt;Esta claro que mi celular es:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ID 1004:631d LG Electronics, Inc. Optimus Android Phone (Camera/PTP Mode)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;De la linea de arriba agarramos los primeros 4 digitos del dispositivo:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;1004:631d&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;En este caso &lt;code&gt;1004&lt;/code&gt; es el identificador para LG.&lt;/p&gt;
&lt;p&gt;Ingresamos lo siguiente en la consola:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;echo SUBSYSTEM=="usb", ATTR{idVendor}=="22b8", MODE="0666", GROUP="plugdev" | sudo tee /etc/udev/rules.d/51-android-usb.rules
&lt;/pre&gt;


&lt;p&gt;Por ultimo hacemos un check para ver si el adb lo detecta en la consola:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;adb devices&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Y deberiamos ver algo similar (depende del dispositivo que tengan)&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;List of devices attached
LGD62093133844  device
&lt;/pre&gt;


&lt;p&gt;Ahora puden hacer en la carpeta de su &lt;code&gt;rn-app&lt;/code&gt; &lt;code&gt;npm run android&lt;/code&gt; y la aplicacion se va a abrir en su celular. COPADO!&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;Gracias por leer, cualquier consulta la pueden dejar escrita en el blog y la contestamos.&lt;/p&gt;
&lt;p&gt;Saludos,&lt;/p&gt;
&lt;p&gt;D.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;hr&gt;
Fuentes y ayudas:
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://source.android.com/setup/initializing"&gt;Establishing a build enviorment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/studio/install.html"&gt;Install android studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/26256279/how-to-set-android-home-path-in-ubuntu-please-provide-the-steps"&gt;Este link de stackoferflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nodejs.org/es/download/package-manager/#distribuciones-de-linux-basadas-en-debian-y-ubuntu"&gt;Instalar node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><guid>http://blog.bitson.group/posts/empezando-con-android-y-react-native/</guid><pubDate>Tue, 27 Feb 2018 21:43:18 GMT</pubDate></item></channel></rss>